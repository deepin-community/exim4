From e8727833517ce189507b9199b5a3f5c3e129040e Mon Sep 17 00:00:00 2001
From: Jeremy Harris <jgh146exb@wizmail.org>
Date: Thu, 17 Oct 2024 11:47:20 +0100
Subject: [PATCH] DKIM: fix parsing of pubkey RR

Broken-since: 2658a023286f
---
 doc/ChangeLog          |  4 +++
 src/functions.h            |  2 +-
 src/miscmods/pdkim/pdkim.c |  7 ++++-
 test/dnszones-src/db.test.ex   |  3 ++
 test/log/4506                  | 21 +++++++++++---
 test/scripts/4500-DKIM/4506    | 50 ++++++++++++++++++++++++++++++++++
 6 files changed, 81 insertions(+), 6 deletions(-)

--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -6,10 +6,14 @@ JH/07 Bug 3106: Fix coding in SPA authen
       properly parenthesized, resulting in a logic error.  While the simple
       fix was provided by Andrew Aitchison, the over-large code block resulting
       from this macro made me want to replace it with a real function so more
       extensive rework becamse needed.
 
+JH/13 Bug 3120: Fix parsing of DKIM pubkey DNS record. Previously a crafted
+      record could crash the meesage recieve process. Investigation by
+      Maxim Galaganov.
+
 Exim version 4.98
 -----------------
 
 JH/01 Support list of dkim results in the dkim_status ACL condition, making
       it more usable in the data ACL.
--- a/src/functions.h
+++ b/src/functions.h
@@ -1018,11 +1018,11 @@ return g ? (unsigned)g->ptr : 0;
 }
 
 static inline uschar
 gstring_last_char(gstring * g)
 {
-return g->s[g->ptr-1];
+return g ? g->s[g->ptr-1] : '\0';
 }
 
 static inline void
 gstring_trim(gstring * g, unsigned amount)
 {
--- a/src/pdkim/pdkim.c
+++ b/src/pdkim/pdkim.c
@@ -683,11 +683,16 @@ for (const uschar * ele = raw_record, *
     if (isspace(val[ Ustrlen(val)-1 ]))
       {				/* Ignore whitespace after value */
       gstring * g = string_cat(NULL, val);
       while (isspace(gstring_last_char(g)))
 	gstring_trim(g, 1);
-      val = string_from_gstring(g);
+      if (!(val = string_from_gstring(g)))
+	{
+	DEBUG(D_acl)
+	  debug_printf(" Missing value for tag '%.*s'\n", taglen, tspec);
+	return NULL;
+	}
       }
 
     if (taglen == 1) switch (tspec[0])
       {
       case 'v': pub->version = val;			break;
